datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id                String        @id @default(cuid())
  name              String?
  email             String?       @unique
  emailVerified     DateTime?
  password          String?
  image             String?
  trial             Boolean       @default(true)
  serviceExpiration DateTime?
  serviceActive     Boolean       @default(false)
  accounts          Account[]
  sessions          Session[]
  integrations      Integration[]
  payments          Payment[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Integration {
  userId        String
  host          String
  type          IntegrationType
  measurementId String
  jsFilePath    String
  phpFilePath   String

  user     User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  requests HostRequest[]

  @@id([userId, host, type])
  @@index([userId])
}

enum IntegrationType {
  googleAnalytics
}

model HostRequest {
  userId          String
  host            String
  integrationType IntegrationType @default(googleAnalytics)
  date            DateTime
  type            HostRequestType
  requestCount    Int             @db.UnsignedInt

  integration Integration @relation(fields: [userId, host, integrationType], references: [userId, host, type], onDelete: Cascade)

  @@id([userId, host, type, date])
  @@index([userId, host, integrationType])
}

enum HostRequestType {
  ordinary
  adblock
  unauthorized
}

model Payment {
  orderId   String   @id
  userId    String
  date      DateTime
  extension Int

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}
